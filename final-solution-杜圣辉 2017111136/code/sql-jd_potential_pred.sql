-- Step1: Acquire intersect of user & archive
-- User with click history 
DROP TABLE IF EXISTS DOC_CLK_ARCHIVE;
CREATE TABLE DOC_CLK_ARCHIVE AS 
	SELECT
		CLK.*
		, DATE(CLK.REQUEST_TIME) AS REQUEST_DATE
	FROM JDUSER AS USR
	INNER JOIN (
		SELECT * FROM JDCLICK
	) AS CLK
		ON CLK.USER_ID = USR.USER_ID
;


-- User with oder and click history
CREATE TABLE DOC_ODR_ARCHIVE AS 
	SELECT
		ODR.*
	FROM (
		SELECT DISTINCT USER_ID AS C_USER_ID FROM DOC_CLK_ARCHIVE
	) AS CLK
	INNER JOIN jdorder AS ODR
		ON ODR.USER_ID = CLK.C_USER_ID
;


--Step2: Generate dataset and features
SET @TRAIN_TW_X_BEGIN = DATE'2018-03-10';
SET @TRAIN_TW_X_END   = DATE'2018-03-23';
SET @TRAIN_TW_Y_BEGIN = DATE'2018-03-24';
SET @TRAIN_TW_Y_END   = DATE'2018-03-27';

SET @TEST_TW_X_BEGIN  = DATE'2018-03-13';
SET @TEST_TW_X_END    = DATE'2018-03-26';
SET @TEST_TW_Y_BEGIN  = DATE'2018-03-27';
SET @TEST_TW_Y_END    = DATE'2018-03-30';


DROP TABLE IF EXISTS JD.JD_HIGH_USER_ID_TRAIN;
DROP TABLE IF EXISTS JD.JD_HIGH_USER_ID_TEST;

--                  ~~~~~~~~~~~~~~~ 训练数据 ~~~~~~~~~~~~~~~
-- 几天内的全量用户
CREATE TEMPORARY TABLE IF NOT EXISTS JD.JD_HIGH_USER_ID_TRAIN
	SELECT
		USER_ID
	FROM DOC_CLK_ARCHIVE
	WHERE 1=1
		AND REQUEST_DATE BETWEEN @TRAIN_TW_X_BEGIN AND @TRAIN_TW_X_END
	GROUP BY USER_ID
;

-- 窗口内全量用户打标签
CREATE TABLE IF NOT EXISTS JD.JD_HIGH_USER_BASE_TRAIN AS 
	SELECT
		USR.USER_ID
		, CASE WHEN ODR.USER_ID IS NOT NULL THEN 1 
					 ELSE 0 
					 END AS LABEL
	FROM JD.JD_HIGH_USER_ID_TRAIN AS USR
	LEFT JOIN (
		SELECT
			USER_ID
		FROM DOC_ODR_ARCHIVE
		WHERE 1=1
			AND ORDER_DATE BETWEEN @TRAIN_TW_Y_BEGIN AND @TRAIN_TW_Y_END
		GROUP BY USER_ID
	) AS ODR
	ON USR.USER_ID = ODR.USER_ID
;

CREATE TABLE IF NOT EXISTS JD.JD_HIGH_DISTRACT_CLK_TRAIN AS 
	SELECT 
		USR.USER_ID
		, DATEDIFF(@TRAIN_TW_Y_BEGIN, CLK.REQUEST_DATE) AS CLK_DISTRACT
		, COUNT(*) AS CLK_TIMES
	FROM JD.JD_HIGH_USER_ID_TRAIN AS USR
	LEFT JOIN DOC_CLK_ARCHIVE AS CLK
		ON CLK.USER_ID = USR.USER_ID
		AND CLK.REQUEST_DATE BETWEEN @TRAIN_TW_X_BEGIN AND @TRAIN_TW_X_END
	GROUP BY USR.USER_ID, CLK.REQUEST_DATE
	ORDER BY USR.USER_ID
;

CREATE TABLE IF NOT EXISTS JD.JD_HIGH_DISTRACT_ODR_TRAIN AS 
	SELECT 
		USR.USER_ID
		, DATEDIFF(@TRAIN_TW_Y_BEGIN, ODR.ORDER_DATE) AS ODR_DISTRACT
		, COUNT(*) AS ODR_TIMES
	FROM JD.JD_HIGH_USER_ID_TRAIN AS USR
	LEFT JOIN DOC_ODR_ARCHIVE AS ODR
		ON ODR.USER_ID = USR.USER_ID
		AND ODR.ORDER_DATE BETWEEN @TRAIN_TW_X_BEGIN AND @TRAIN_TW_X_END
	GROUP BY USR.USER_ID, ODR.ORDER_DATE
	ORDER BY USR.USER_ID
;

-- 窗口内全量用户进行画像进行粗略提取
CREATE TABLE IF NOT EXISTS JD.JD_HISH_USER_TRAIN_BHAV_PROTRAIT AS 
SELECT
	CLK_0.USER_ID
	, CLK_0.CLK_1D
	, CLK_0.CLK_3D
	, CLK_0.CLK_7D
	, CLK_0.CLK_14D
	, COALESCE(ROUND(CLK_D.CLK_DISTRACT_SCORE,4), 0) AS CLK_DISTRACT_SCORE

	, ODR_0.ODR_1D
	, ODR_0.ODR_3D
	, ODR_0.ODR_7D
	, ODR_0.ODR_14D
	, COALESCE(ROUND(ODR_D.ODR_DISTRACT_SCORE, 4), 0) AS ODR_DISTRACT_SCORE
FROM(
	SELECT
		USR.USER_ID
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, CLK.REQUEST_DATE)<=1 THEN 1 ELSE 0 END)
			AS CLK_1D
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, CLK.REQUEST_DATE)<=3 THEN 1 ELSE 0 END)
			AS CLK_3D
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, CLK.REQUEST_DATE)<=7 THEN 1 ELSE 0 END)
			AS CLK_7D
		, COUNT(CASE WHEN CLK.REQUEST_DATE IS NOT NULL THEN 1 ELSE NULL END) AS CLK_14D
	FROM JD_HIGH_USER_BASE_TRAIN AS USR
	LEFT JOIN DOC_CLK_ARCHIVE AS CLK
		ON CLK.USER_ID = USR.USER_ID
		AND CLK.REQUEST_DATE BETWEEN @TRAIN_TW_X_BEGIN AND @TRAIN_TW_X_END
	GROUP BY USR.USER_ID
) AS CLK_0
LEFT JOIN (
	SELECT 
		USR.USER_ID
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, ODR.ORDER_DATE)<=1 THEN 1 ELSE 0 END)
			AS ODR_1D
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, ODR.ORDER_DATE)<=3 THEN 1 ELSE 0 END)
			AS ODR_3D
		, SUM(CASE WHEN DATEDIFF(@TRAIN_TW_X_END, ODR.ORDER_DATE)<=7 THEN 1 ELSE 0 END)
			AS ODR_7D
		, COUNT(CASE WHEN ODR.ORDER_DATE IS NOT NULL THEN 1 ELSE NULL END) AS ODR_14D
	FROM JD_HIGH_USER_BASE_TRAIN AS USR
	LEFT JOIN DOC_ODR_ARCHIVE AS ODR
		ON ODR.USER_ID = USR.USER_ID
		AND ODR.ORDER_DATE BETWEEN @TRAIN_TW_X_BEGIN AND @TRAIN_TW_X_END
	GROUP BY USR.USER_ID
) AS ODR_0
	ON ODR_0.USER_ID = CLK_0.USER_ID
LEFT JOIN (
	SELECT
		USER_ID
		, SUM(CLK_TIMES * LOG(2,1 + 1/(CLK_DISTRACT+1))) AS CLK_DISTRACT_SCORE
	FROM JD.JD_HIGH_DISTRACT_CLK_TRAIN AS T
	GROUP BY USER_ID
) AS CLK_D
	ON CLK_D.USER_ID=CLK_0.USER_ID
LEFT JOIN (
	SELECT
		USER_ID
		, SUM(ODR_TIMES * LOG(2,1 + 1/(ODR_DISTRACT+1))) AS ODR_DISTRACT_SCORE
	FROM JD.JD_HIGH_DISTRACT_ODR_TRAIN AS T
	GROUP BY USER_ID
) AS ODR_D
	ON ODR_D.USER_ID=CLK_0.USER_ID
;




--                  ~~~~~~~~~~~~~~~ 测试数据 ~~~~~~~~~~~~~~~
# 几天内的全量用户
CREATE TEMPORARY TABLE IF NOT EXISTS JD.JD_HIGH_USER_ID_TEST
	SELECT
		USER_ID
	FROM DOC_CLK_ARCHIVE
	WHERE 1=1
		AND REQUEST_DATE BETWEEN @TEST_TW_X_BEGIN AND @TEST_TW_X_END
	GROUP BY USER_ID
;

-- 窗口内全量用户打标签
CREATE TABLE IF NOT EXISTS JD.JD_HIGH_USER_BASE_TEST AS 
	SELECT
		USR.USER_ID
		, CASE WHEN ODR.USER_ID IS NOT NULL THEN 1 
					 ELSE 0 
					 END AS LABEL
	FROM JD.JD_HIGH_USER_ID_TEST AS USR
	LEFT JOIN (
		SELECT
			USER_ID
		FROM DOC_ODR_ARCHIVE
		WHERE 1=1
			AND ORDER_DATE BETWEEN @TEST_TW_Y_BEGIN AND @TEST_TW_Y_END
		GROUP BY USER_ID
	) AS ODR
	ON USR.USER_ID = ODR.USER_ID
;

CREATE TABLE IF NOT EXISTS JD.JD_HIGH_DISTRACT_CLK_TEST AS 
	SELECT 
		USR.USER_ID
		, DATEDIFF(@TEST_TW_Y_BEGIN, CLK.REQUEST_DATE) AS CLK_DISTRACT
		, COUNT(*) AS CLK_TIMES
	FROM JD.JD_HIGH_USER_ID_TEST AS USR
	LEFT JOIN DOC_CLK_ARCHIVE AS CLK
		ON CLK.USER_ID = USR.USER_ID
		AND CLK.REQUEST_DATE BETWEEN @TEST_TW_X_BEGIN AND @TEST_TW_X_END
	GROUP BY USR.USER_ID, CLK.REQUEST_DATE
	ORDER BY USR.USER_ID
;

CREATE TABLE IF NOT EXISTS JD.JD_HIGH_DISTRACT_ODR_TEST AS 
	SELECT 
		USR.USER_ID
		, DATEDIFF(@TEST_TW_Y_BEGIN, ODR.ORDER_DATE) AS ODR_DISTRACT
		, COUNT(*) AS ODR_TIMES
	FROM JD.JD_HIGH_USER_ID_TEST AS USR
	LEFT JOIN DOC_ODR_ARCHIVE AS ODR
		ON ODR.USER_ID = USR.USER_ID
		AND ODR.ORDER_DATE BETWEEN @TEST_TW_X_BEGIN AND @TEST_TW_X_END
	GROUP BY USR.USER_ID, ODR.ORDER_DATE
	ORDER BY USR.USER_ID
;

-- 窗口内全量用户进行画像进行粗略提取
CREATE TABLE IF NOT EXISTS JD.JD_HISH_USER_TEST_BHAV_PROTRAIT AS 
SELECT
	CLK_0.USER_ID
	, CLK_0.CLK_1D
	, CLK_0.CLK_3D
	, CLK_0.CLK_7D
	, CLK_0.CLK_14D
	, COALESCE(ROUND(CLK_D.CLK_DISTRACT_SCORE,4), 0) AS CLK_DISTRACT_SCORE

	, ODR_0.ODR_1D
	, ODR_0.ODR_3D
	, ODR_0.ODR_7D
	, ODR_0.ODR_14D
	, COALESCE(ROUND(ODR_D.ODR_DISTRACT_SCORE, 4), 0) AS ODR_DISTRACT_SCORE
FROM(
	SELECT
		USR.USER_ID
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, CLK.REQUEST_DATE)<=1 THEN 1 ELSE 0 END)
			AS CLK_1D
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, CLK.REQUEST_DATE)<=3 THEN 1 ELSE 0 END)
			AS CLK_3D
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, CLK.REQUEST_DATE)<=7 THEN 1 ELSE 0 END)
			AS CLK_7D
		, COUNT(CASE WHEN CLK.REQUEST_DATE IS NOT NULL THEN 1 ELSE NULL END) AS CLK_14D
	FROM JD_HIGH_USER_BASE_TEST AS USR
	LEFT JOIN DOC_CLK_ARCHIVE AS CLK
		ON CLK.USER_ID = USR.USER_ID
		AND CLK.REQUEST_DATE BETWEEN @TEST_TW_X_BEGIN AND @TEST_TW_X_END
	GROUP BY USR.USER_ID
) AS CLK_0
LEFT JOIN (
	SELECT 
		USR.USER_ID
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, ODR.ORDER_DATE)<=1 THEN 1 ELSE 0 END)
			AS ODR_1D
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, ODR.ORDER_DATE)<=3 THEN 1 ELSE 0 END)
			AS ODR_3D
		, SUM(CASE WHEN DATEDIFF(@TEST_TW_X_END, ODR.ORDER_DATE)<=7 THEN 1 ELSE 0 END)
			AS ODR_7D
		, COUNT(CASE WHEN ODR.ORDER_DATE IS NOT NULL THEN 1 ELSE NULL END) AS ODR_14D
	FROM JD_HIGH_USER_BASE_TEST AS USR
	LEFT JOIN DOC_ODR_ARCHIVE AS ODR
		ON ODR.USER_ID = USR.USER_ID
		AND ODR.ORDER_DATE BETWEEN @TEST_TW_X_BEGIN AND @TEST_TW_X_END
	GROUP BY USR.USER_ID
) AS ODR_0
	ON ODR_0.USER_ID = CLK_0.USER_ID
LEFT JOIN (
	SELECT
		USER_ID
		, SUM(CLK_TIMES * LOG(2,1 + 1/(CLK_DISTRACT+1))) AS CLK_DISTRACT_SCORE
	FROM JD.JD_HIGH_DISTRACT_CLK_TEST AS T
	GROUP BY USER_ID
) AS CLK_D
	ON CLK_D.USER_ID=CLK_0.USER_ID
LEFT JOIN (
	SELECT
		USER_ID
		, SUM(ODR_TIMES * LOG(2,1 + 1/(ODR_DISTRACT+1))) AS ODR_DISTRACT_SCORE
	FROM JD.JD_HIGH_DISTRACT_ODR_TEST AS T
	GROUP BY USER_ID
) AS ODR_D
	ON ODR_D.USER_ID=CLK_0.USER_ID
;